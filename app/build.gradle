apply plugin: 'com.android.application'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: "com.jaredsburrows.spoon"
apply plugin: 'com.github.triplet.play'

android {
  if (file('../signing/play.json').exists()) {
    playAccountConfigs {
      release {
        jsonFile = file('../signing/play.json')
      }
    }
  }

  compileSdkVersion 'android-P'
  defaultConfig {
    applicationId "ie.pennylabs.x.basil"
    minSdkVersion 21
    targetSdkVersion 27
    versionCode 12
    versionName "0.1.$versionCode"
    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    archivesBaseName = "basil-$versionName"

    if (file('../signing/play.json').exists()) {
      playAccountConfig = playAccountConfigs.release
    }
    javaCompileOptions {
      annotationProcessorOptions {
        arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
      }
    }
  }

  sourceSets {
    androidTest.assets.srcDirs += files("$projectDir/schemas".toString())
  }

  signingConfigs {
    if (file('../signing/release.keystore').exists()) {
      release {
        storeFile file(Keystore.releaseStore)
        storePassword Keystore.storePassword
        keyAlias Keystore.keyAlias
        keyPassword Keystore.keyPassword
      }
    }

    debug {
      storeFile file('../signing/debug.keystore')
    }
  }

  buildTypes {
    debug {
      signingConfig signingConfigs.debug
      applicationIdSuffix '.debug'
    }

    release {
      if (file('../signing/release.keystore').exists()) {
        signingConfig signingConfigs.release
      } else {
        signingConfig signingConfigs.debug
      }
      postprocessing {
        proguardFiles 'proguard-rules.pro'
        removeUnusedResources = true
        removeUnusedCode = true
        optimizeCode = true
        obfuscate = false // https://github.com/material-components/material-components-android/issues/115
      }
    }
  }
}

play {
  track = 'internal'
  untrackOld = true
}

spoon {
  baseOutputDir = "$project.buildDir/reports/spoon"
}

dependencies {
  implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$Deps.kotlin"
  implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:${Deps.coroutines}"
  implementation "org.jetbrains.kotlinx:kotlinx-coroutines-reactive:${Deps.coroutines}"

  implementation 'com.google.android.material:material:1.0.0-alpha1'
  implementation 'androidx.constraintlayout:constraintlayout:1.1.0'
  implementation "androidx.lifecycle:lifecycle-livedata:2.0.0-alpha1"
  implementation "androidx.room:room-runtime:$Deps.room"
  kapt "androidx.room:room-compiler:$Deps.room"

  implementation 'com.jakewharton.timber:timber:4.7.0'
  implementation 'com.squareup.moshi:moshi-kotlin:1.6.0'
  implementation "com.google.dagger:dagger:$Deps.dagger"
  implementation "com.google.dagger:dagger-android:$Deps.dagger"
  kapt "com.google.dagger:dagger-compiler:$Deps.dagger"
  kapt "com.google.dagger:dagger-android-processor:$Deps.dagger"

  testImplementation 'junit:junit:4.12'
  androidTestImplementation "com.android.support.test:rules:$Deps.support_test"
  androidTestImplementation "com.android.support.test:runner:$Deps.support_test"
  androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
  androidTestImplementation "com.squareup.spoon:spoon-client:2.0.0-SNAPSHOT"
}

kotlin {
  experimental {
    coroutines 'enable'
  }
}
androidExtensions {
  experimental = true
}